[tox]
envlist =
    clean,
    check,
{% for env, config in tox_environments|dictsort %}
    {{ env }},
{% if not config.cover %}
    {{ config.python[-3:] }}-buildonly-nocover,
{% endif %}
{% endfor %}
    report,
    docs

[testenv]
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
deps =
    2.7: zipp<=1.2.0
    2.7: pytest<5.0.0
    3.6,3.7,3.8: pytest
    2.7: numpy<=1.16.6
    3.6,3.7,3.8: numpy
commands =
    python setup.py clean --all build_ext --force --inplace
    python -m pytest {posargs:-vv --ignore=c_aacgmv2 --doctest-glob='*.rst'}

[testenv:docs]
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
usedevelop = false
commands =
    python ci/bootstrap.py
passenv =
    *

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme
    pygments
    twine
skip_install = true
usedevelop = false
commands =
    python setup.py sdist
    twine check dist/*
    check-manifest {toxinidir}
    flake8 --ignore=F401,W503 aacgmv2

[testenv:coveralls]
deps =
    coveralls
skip_install = true
usedevelop = false
commands =
    coverage combine
    coverage report
    coveralls --rcfile=setup.cfg --merge=extension-coveralls.json []

[testenv:extension-coveralls]
deps =
    cpp-coveralls
skip_install = true
usedevelop = false
commands =
    coveralls --rcfile=setup.cfg --build-root=. --include=src --dump=extension-coveralls.json []

[testenv:report]
deps = coverage
skip_install = true
usedevelop = false
commands =
    coverage combine
    coverage report

[testenv:clean]
commands = coverage erase
skip_install = true
usedevelop = false
deps = coverage

{% for env, config in tox_environments|dictsort %}
[testenv:{{ env }}]
basepython = {env:TOXPYTHON:{{ config.python }}}
{% if config.cover or config.env_vars %}
setenv =
    {[testenv]setenv}
{% endif %}
{% for var in config.env_vars %}
    {{ var }}
{% endfor %}
{% if config.cover %}
    WITH_COVERAGE=yes
    PY_CCOV=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    python -m pytest {posargs:--cov --cov-report=term-missing -vv --doctest-glob='*.rst'}
{% endif %}
{% if config.cover or config.deps %}
deps =
    {[testenv]deps}
{% endif %}
{% if config.cover %}
    pytest-cov
{% endif %}
{% for dep in config.deps %}
    {{ dep }}
{% endfor %}

{% if not config.cover %}
[testenv:{{ config.python[-3:] }}-buildonly-nocover]
basepython = {env:TOXPYTHON:{{ config.python }}}
deps =
skip_install = true
commands =
{% endif %}

{% endfor %}
